name:
	lua

file_ending:
	.lua

end:
	\e

keywords:
	end|do|local|dofile|print|io|os

import:
	dofile("...name...")

end-namespace:
	,\n

array:
	,\s

scope:
	.

file-start:
	\e

file-end:
	\n\nmain()

define-var:
	local ...name... = ...value...

set-var:
	...name... = ...value...

define-var-namespace:
	...name... = ...value...

blocks:
	function:
		\n...value...\nend
	parameter:
		(...value...)
	calculation:
		(...value...)
	namespace:
		...name... = {\n...value...\n}

calculations:
	operators:
		+|-|*|/|%|==|<|>|and|or
	operators-replace:
		!=|~=
	string-add:
		..

parameter:
	...value...

types:
	number:
		name:
			number
	float:
		name:
			number
	str:
		name:
			std::string
		pattern:
			"..."
	bool:
		name:
			bool
	void:
		name:
			void

functions:
	built-in:
		if:
			name:
				if
		while:
			name:
				while
		return:
			name:
				return
		for:
			custom:
				true
			name:
				for(int ... = ...from...; ... < ...to...; ...++)
	call:
		call:
			...name...(...params...)
		call-func:
			...name...(...params...) then\n...func...\nend
	define:
		main:
			function main() \n...value...\nend
		no-params:
			...name... = function() \n...value...\nend
		no-return-value:
			...name... = function(...params...) \n...value...\nend
		other:
			...name... = function(...params...) \n...value...\nend
